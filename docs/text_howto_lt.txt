===================
真面目に！できる！LT！
===================

「LT（ライトニングトーク）って実際どうやって作り上げればいいの？」と、いざやろうと思っても、よくわからなくなってしまうことは初心者や何回もLTをやったことがある人でもあると思います。実際私もそうです（笑）。ここでは、私が見聞きしたり経験してきた限りのLTの作り方について以下のコンテンツを通して述べたいと思います。

- LT（ライトニングトーク）をする上で注意すべきポイント
- できる！LTをするためのフロー
- 様々なLT


## LT（ライトニングトーク）をする上で注意すべきポイント

LT（ライトニングトーク）とは、5分間など短い時間でプレゼンテーションをすることです。シンプルに言えばこんな単純なことですが、恐らく重要なのは、**じゃあ実際どうすればよいのか？**、**どのように考えて作れば良いのか？**ということだと思います。まず、ここでは、実際にLTをつくり上げるまで何について注意すべきかということについて、3つの観点で深掘りしていきたいと思います。

### プレゼンテーションの極意
プレゼンテーションとは「何か」を伝えることです。アイデアが浮かばないと「何でもいいから何かないかなー」と憂鬱になりますが、一旦何か思い浮かぶといろいろと言いたいことが増えてきて収集がつかなくなるものです。プレゼンテーションで大事なのは、本当に伝えたいことは何なのかを意識することです。その伝えたいことを中心に、テキストに起こし、コトバで補強する、そのシナリオをカタチにするのが、プレゼンテーションです。

### 5分間という制約
難しい文学小説のように伝えたいことを様々な比喩的表現で様々なアプローチでテキストにし、それを読んでもらい感じてもらうという方法とLTを比べた時、明らに違うのは聴衆（読者）が費やす時間です。

登壇者（小説家）の側から考えれば、じっくりと悪戦苦闘してコンテンツ（小説／LT）を作り上げるという時間は変わらないのですが、聴衆（読者）の場合はそうではありません。小説の場合は何度も読み直せるし、小説のページ数に応じてかける時間は異なるでしょうし、特に時間的制約を受けることなく、**読者のペースに合わせて**その内容を吟味する時間があります。しかし、LTの場合はたった5分間しかないのです。その時間内で、聴衆は「登壇者が何を言いたいのだろうか？」、「何を伝えたいのだろうか？」ということをぼんやりと考えながら理解するのです。

そう考えると、LTは好き勝手に話せばいいというものではなく、本当にあなたが伝えたいことは何か？ということを中心に考えつつも、聴衆にわかりやすいようにトークを展開しなくはならないのです。つまり、5分間という制約を乗り越えるのに重要なのは、もっとも伝えたいことが伝わりやすいようなストーリーを考えることです。

### 思いつきがすべて
さて、極意やれ制約やれ様々な脅し／難しい話をしてしまいましたが、実際に**LTをやる上でもっとも重要だと思うのは、思いつき**だと思います。ふと、天から降ってきたアイデアとか、ちょっとした小話だとか、**「なんか人に伝えたいなー」と思ったことを素直に自分の言葉にすればいいのです。**

まずは、そのような何か伝えたいなーと思ったことを大切にして、とにかく、人に伝えてみることです。細かいことは気にせずに、とにかく、人に伝える機会をつくるべきです。つまり、とにかく、LTに応募してしまうことです。

## できる！LTをするためのフロー

LTについての押さえておくべきポイントがわかっても、「はい、そうですか。で、実際、私、何から始めればいいんでしたっけ？」と思うのが普通です。何かとてもすごいことを語っている本を買って読んで、なんかとてもすごいこと知った気になるんだけど、残念ながら、多くの場合なんのアクションにも結びつかないのです。LTの場合は、おおまかに見て、以下のステップでつくり上げることができると思います。

- 考える／降ってくる／探してみる
- 応募する
- 文章にしてみる
- 構成を推敲する
- スライドをつくる
- 予行演習する
- 発表する
- コミュニティに馴染む

以下では、それぞれのステップについて考えていきたいと思います。

### 考える／降ってくる／探してみる
まず必要なのは、LTのネタになるような「なんとなくのアイデア」です。いきなりアイデアが降ってくるというのは稀で、基本的には、ちょっと考えてみることが必要がだと思います。例えば、以下のように。

- ぶたんやっていることを思い返す
    - なんかするために、こんなツールつかった
    - なんかするために、こんな感じで乗り切った　
    - なんかこんなことやっていて、こんな風に思った
- 今度やりたいことに思いを巡らす
    - 今度、こんなプロジェクトにアサインされるんだけど、こんなことやってみたい
    - 現状のシステム環境はこんなんだけど、こんな風にすると改善されると思うからやろうと思っている
    - 最近こういうモジュール多いんだけど、こういうところってまだまだ改善余地あると思う
- 世の中のトレンドについて考えてみる
    - 最近は「オリンピック」です、「オリンピック」といえば、hogehogeですねー
    - 最近はやりのPlackですが、Plackといえば、mogemogeというのがありますねー
    - 最近は太りました、太ったといえば、foobarですねー
- その他、もろもろ
    - 人材募集中！
    - コミュニティの活動報告
    - 最近の疑問

そうやって考えていると、ふと、「あっ、これってLTのネタに使えるんじゃないのか？」と天からアイデアが降ってくるということがあるんじゃないかと思います。しかし、それでも、アイデアが思いつかないときは、プログラマならではのネタの宝庫「昔書いたコード」を使いましょう。

- 昔のコードをあさる
    - 昔はこんなコード書いていたけど、今ならこうかくと思う
    - 昔、こんな問題があって、こんなコード書いて解決させた
- 今後書いてみたいコードについてぼんやりインターフェースだけつくる
    - 最近こんなのほしいんだけど、どうでしょう？
    - 最近こんな問題を解決させたいんだけど、こんな感じのコードでうまくいくかな？
- なんかこう書いたけど、実際よくわからないよなー、このコードって・・・
    - 前こんなモジュール使ったけど、他にいいのない？
    - 恥ずかしながら今このコードの挙動がよくわからない！
    - githubでこのプロジェクトがホットだと思うから、参加してみては?

やっぱりコードを見ていると、いろいろと思うところがあって、なんとなくのテーマみたいなのが、浮かんでくるのではないでしょうか？仮に今まで誰かブログに書いていたり、なんらかのカンファレンスで発表していたようなネタでも、なんか独自の見解や視点が入っていれば、聴衆の興味を引けると思います。実際5分内で話をすればよくて、2,3分でもいいのです。日々の生活に問題意識を持って過ごし、とにかくLTのネタを見つけましょう。

### 応募する
実際にLTネタが思いついたら、早速応募しましょう。あるいは、実際、思いついていなくても応募してもいいと思います、道は自然とひらけるものですし、YAPC::Asiaのスピーカーの皆様はまず応募から始めているケースが多いように思えます。LTをする上でもっとも重要なのは、実際にLTをすることですが、次に重要なのはその機会を作ることです。最終的な内容はなんとなります。失敗してもいいのです。disられるというフィードバックから新しい経験をしましょう。

### 文書にしてみる
ネタとなるテーマが思いついて、LTの応募を済ませたら、忘れないうちにカタチに残していきましょう。だいたい以下のようにしてテーマをふくらませて、文章を構造化させていくとよいでしょう。

- とにかく思いついたことをテキストに書く
- テキストに関連性を持たせるように補足内容を書きつつ、深掘りしていく
- テキスト群のまとまりをつけて見出しを書く
- 見出しを階層構造に整理してツリー構造を作る

まずは、思いついたアイデアをとにかくテキストに書き出してみましょう。文と文との関連性はまずは気にしません。思いつくがままにどんどん書いていくのです。ある程度、アイデアを書ききったら、ふと我に返り、文と文のつながりを補足して行きましょう、「これとこれのつながりってなんだろう？」、「あ、こういうことだからこう思ったんだ」という具合に。さらに、そもそも思ったアイデアについて深掘りして行きましょう。そうすると、ちょっとしたアイデアでもなんとなく一連の文脈のあるストーリーができあがっていくと思います。そしたら、文章をなんとなく固まりにわけて、それぞれに見出しをつけていきます。だんだんと最初のアイデアがかたちになっていきます。もしかたら、最初に書いた文の順番を変えていくかもしれませんし、さらなる補足を加えていくことになるかもしれません。そうしてできたまとまり群に、さらに見出しををつたり、大きなまとまりにしたりして、見出しの階層構造ができると思います。それで、結局この文章はなんだろうということを考え、とりあえず、ひとことで言い表せるタイトルをつけてあげます。こうして、ひとつの記事の出来上がり、LTのたたき台草案の出来上がりです。しっかりと、保存しておきましょう。

### 構成を推敲する
次に、実際にLTにするために様々な要素をそぎ落としたり、自分でうまく話せるように構成を練り直します。LTを実際にすると思って以下の点に注意して、文章を組み立てなおしてみてください。1点注意して欲しいのが、先ほど作成した文章とは別のファイルで文章を構成し直すことです。最初の文章があなたのLTのすべてになるので、構成していくうちにそぎ落としてしまったポイントが実は重要だったり、あまりそぎ落としすぎてコトバで補足するような内容がなくなってしまったりするからです。最初に作成した文章は、最後作成するスライドとあわせてとっておきましょう。

- どんな導入から入ると話しやすいか？
- どんな展開だとスムーズに話せるか？
- どんなところを一番強調したいか？
- どんなシメをするとすっきり終われるか？

このようなことを考えていると、なんとなく実際にLTをするときのストーリーができてくると思います。よくある基本構成は「起承転結」ですがそれに拘らずとも、テンポよく話せるまとまりになればいいと思います。上記には入れていませんが、LTは盛り上がるようなポイントを入れると注目されやすい傾向にあります。何か、聴衆に問いかけるようなポイントを意識して構成を練るとより良いLTになると思いますが、滑ると恥ずかしいので自問自答しながらアソビを入れていきましょう。

### スライドをつくる
そろそろLTが出来上がりという状況になってきています。構成の推敲が終わって完成でも良いのですが、基本的にカンファレンスのセッションにはスライドがつきものだし、やっぱり紙芝居にしたほうがいいたいことも伝わりやすいです。なので、スライドを作りましょう。

#### ツール
以下などスライド作成には様々なツールがありますが、自分の作りやすいものを選ぶといいと思います。

- Keynote
- PowerPoint
- ブラウザプレゼンツール（EX.[markdown2impress](http://blog.clouder.jp/archives/001146.html)）

エンジニアは[Markdown](http://ja.wikipedia.org/wiki/Markdown)が好きだったりするので、そういう場合はJavaScriptで変形させたブラウザプレゼンツールもいいと思います。MarkdownはHTMLがベースなので、スライド作成が苦手な人でも、HTMLの論理構造をおさえてMarkdownをかけばそのままスライドになるので、初心者にはとてもオススメだと思います。KeynoteやPowerPointはチャートなどを作成するのが楽だと思うので、カッコいいプレゼン資料を作りたい人はこれらを使うといいと思います。ブラウザプレゼンツールを使っても、[Cacoo](https://cacoo.com/lang/ja/)のようなチャート作成Webアプリケーションがあるので、これで画像を作ればいいと思います。

#### わかりやすいスライドのポイント
スライド作成の最も重要なポイントは、**1スライド、1メッセージ**ということ原則です。さらに言えば、LTはたださえ時間が短いので、補足となるようなテキストやチャートも、たくさん情報を盛り込まずに、シンプルにわかりやすくする必要があります。読ませる用のスライドの場合は、1メッセージに対する補足情報を詳しく盛り込んでもいいと思いますが、プレゼンテーション用のスライドはよりシンプルにします。補足情報が長くなる場合は、以下のポイントに注意して、スライドを編集して行きましょう。

- いくつかのスライドに分割したほうが良いのではないか？
- 詳しくスライドに書かずに、簡単にコトバで補足できるのではないか？
- そもそもその内容は不要なのではないか？

特に、プレゼンテーションの場合は、一枚のスライドで長い時間話していても聴衆は飽きてしまうことが多いので、テンポのよさを重視するためにもまめにスライド分割するようにするのがいいと思いますし、一方でぱっぱっとスライドだけ変わっていて話が見えなくなることもあるので、思い切って補足情報をなしにすることも考えておきたいです。


#### 実際にスライドに書く内容
実際にスライドに書く内容ですが、基本はタイトル（メッセージをシンプルに表現したもの）とその補足が主流です。自分で言いたいことをスライドに書いておければ、発表時に忘れてもスライドのテキストをヒントにいろいろと言いたいことが思い出せるということになりますし、コトバでの説明がおぼつかない時には、スライドの内容で聴衆は内容を汲み取ってくれます。基本はこれを心がけると伝えたい内容が伝わりやすいものになります。

一方で、あまりに基本を徹底しすぎて、その時は伝わるもののその後聴衆の心に残るかというとちょっと疑問の残るのが基本に忠実な方法です。5分間を通して最終的に聴衆に何かを伝えればいいので、スライドの中身は堅苦しくテキストばかりにせず、聴衆が文字を読まずに言いたいことの雰囲気をさっと掴んでくれるような絵（グラフ／チャート／写真／キャプチャ画像など）のみというスライドも入れていくのもテクニックとして覚えておいて損はありません。

なお、自己紹介スライドについては賛否両論あるところだと思いますが、LTのネタに関連性が高い場合は、導入がてら詳しく話すといいともいますが、そうでない場合は、タイトルスライドに名前かいておく程度でいいと思います。もっと伝えたい内容について時間を使いましょう。ちなみにイレギュラーケースですが、Hachioji.pmの場合はLTがそもそも自己紹介代わりだったりするので、そこを厚めに書いたりするようにしています、「オレのことみんなに知ってほしいんだ－！」というLTのをしたい場合はそれでもいいでしょう。飲み会の席では普段やっていることとかの話で盛り上がりやすいので、先にネタを撒いておく感じですね。

### 予行演習する
やっぱりやっておきたいのは予行演習です。ストップウォッチなどで時間を計ってLTをやってみます。以下のような点に気をつけてやってみてください。

- 最初にどんなコトバで挨拶するのか？
- どんな導入のコトバを話すのか？
- どのタイミングでスライドを切り替えていくのか？
- 聴衆への問いかけはどのようなコトバを使えばいいのか？

慣れないとなかなかスムーズにストーリー展開できないもので、なかなか時間内に終わらなかったりします。最初は誰しもそうです。予行演習は何度もできます、失敗を気にせずに何度も練習してみてください。実際に、LTの予行演習をしてみると、当初思ったように進まないこともあります、そんな時は思い切って全体の構成やスライドも作り直しましょう。

### 発表する
すでに準備万端です。発表に際して死角はありません。万一のことがあってきっと大丈夫。だけど、念のため注意しておくべきは以下の点です。

- ドタキャンしない
- スライドをしっかりと投影させる（スクリーンとPCの同期がうまくいかないのはよくあることです）
- マイクの調子を万全にする

どちらかというと、主催側で面倒を見てくれることばかりですが、様々な確認を求められたら、主催の皆様に協力してより良いLTを作り上げられるようにしましょう。

## コミュニティに馴染む
LTをしただけでは終わりではありません。以下のような方法で、自分のLTの結果を確認する、あるいは、今後のLTなどのプレゼンテーションの機会を作っていきましょう。

- LTしたことを自慢する／シェアする（オレhogehogeでLTしたんだぜっ！）
    - リアルな場
    - Twitter,Facebook
    - ブログに書く(ex.[miyagawanize2](http://yusukebe.com/archives/20120805/114551.html))
- LTを聞く
    - 他の人のLTも聞く
    - facebookで実況中継する
    - Twitterで感想をつぶやく
    - followする／ブログのRSSを登録
- リアルに馴染む
    - 飲み会ではなしかける

人と交流することは楽しいものです。せっかく、LTしたならそのネタをかませて他にLTした人や、聞いてくれた人に「あれってどうでした？」って勇気を持って話しかけましょう。

## 様々なLT

最後に、YAPC::Asiaで実際に行われた様々なLTをご紹介したいと思います。暫定的に、「課題解決型」、「ネタ型」、「最近の報告型」と3つのカテゴリにわけてご紹介してますが、どのLTのに多かれ少なかれそれぞれのカテゴリのポイントが入っています。私が、いいなーと思ったこともコメントしてありますので、是非皆さんのLTの制作の参考してください。

### 課題解決型
トークの王道が、課題解決型だと思います。「こんな問題を感じて、こんな解決策を思いついた」という件の内容で、一番やりやすいと思います。

#### アクセサについての考察 (by karupanerura)
<iframe width="560" height="315" src="http://www.youtube.com/embed/5Iyv4BKsmq4" frameborder="0" allowfullscreen></iframe>

自己紹介で勇気をふりしぼっているところが新鮮で気持ちよく感じられますね。

#### Perlで無理ゲー攻略(2分版) (by TAKESAKO)
<iframe width="560" height="315" src="http://www.youtube.com/embed/3C7Ngq6bM4M" frameborder="0" allowfullscreen></iframe>

[ロングバージョンをYAPC本編で発表しています](http://www.youtube.com/watch?v=cndfNAKlrjU)。LTのほうを比較してみると、時間内で収まるように様々な補足情報が削ぎ落とされ、シンプルに、かつ、よりおもしろいポイントだけ抽出されているのがわかります。大変参考になりますね。

#### ぼくがいきていくためのさいきょうの開発環境 (by Yappo)
<iframe width="560" height="315" src="http://www.youtube.com/embed/bMDK8W0toNE" frameborder="0" allowfullscreen></iframe>

Yappoさんが仕事上で直面した様々な問題に対して、解決してきた話が話されています。仕事への姿勢もさることながら、実は前日に[App::Ikachan](http://www.youtube.com/watch?v=Eh2eWZ1YnjY)というLTをしていて連続ものになっています。このような複数回行うというトリッキーなスタイルも参考にしたいですね。

### ネタ型
様々な文脈で笑いを狙っていくタイプです。滑ると恥ずかしいと思いますが、決まるとみんなが笑ってくれてうれしいと思います。一回は目指してみたいスタイルですね。

#### Perl同人活動 (by makamaka)
<iframe width="560" height="315" src="http://www.youtube.com/embed/HOKRw-QonxU" frameborder="0" allowfullscreen></iframe>

最近の報告型の体をとっていますが、とりあえず、トリッキーで面白いですねー。百戦錬磨のマカマカさんだからこそでしょう。

#### スピリチュアルトーク Perlで次世代ゲーム開発 (by keroyonn)
<iframe width="560" height="315" src="http://www.youtube.com/embed/FXNW-KraNMA" frameborder="0" allowfullscreen></iframe>

コード以外の話がだいたいスピリチュアルなんて言われ方しますが、それにかけてうまく作ったことを紹介していて、とてもおもしろいですね。

#### 基幹システムがperlでどうしてこうなった (by minemaz)
<iframe width="560" height="315" src="http://www.youtube.com/embed/2tAX9NC4wJU" frameborder="0" allowfullscreen></iframe>

OpenCOBOLという馴染みのない（？）ものとの連携をとてもおもしろいストーリー展開で表現していると思います。

### 最近の報告型
「最近の○○ってこんなだよ」、「最近○○だよ」と報告するのがこのスタイルです。コミュニティの活動報告などは、普段ブログで書いていても、意外と見てくれていない人がいるので「私が主催者です」と顔見せの挨拶がてら行うといいんじゃないでしょうか。

#### Top Ten 2011 (by charsbar)
<iframe width="560" height="315" src="http://www.youtube.com/embed/vpD681SqoqM" frameborder="0" allowfullscreen></iframe>
charsbarさんが毎年されているコミュニティの活動状況のまとめです。これにならって、普段会社でやっている文化みたいなものを紹介してもいいかもしれませんね。

#### This season's funny modules! XD (by tomi-ru)
<iframe width="560" height="315" src="http://www.youtube.com/embed/OtO2IZOdU5s" frameborder="0" allowfullscreen></iframe>
最近のおもしろいモジュールの解説です。切れのある展開は是非マネしたいですね。

#### 株式会社ガイアックス - スポンサードセッション (byu twodollarz) 
<iframe width="560" height="315" src="http://www.youtube.com/embed/WDnidTWxEPw" frameborder="0" allowfullscreen></iframe>
スポンサードセッションで求人募集をされていますが、非常に面白いネタが詰まっていてとても印象に残るLTだと思います。

### その他のLTの事例
[YouTubeのYAPC::Asiaのチャンネルを御覧ください。](http://www.youtube.com/user/yapcasia/videos?query=LT)他にたくさんのLTがアップされていますので、いろいろと参考になると思います。

## まとめ　～やっぱり最後は気持ち～

さて、様々なことをご紹介してきましたが、以上を改めてまとめます。

- LTを作るときの気をつけるポイント
    - 本当に伝えたいことを中心に、テキストし、コトバで補強し、カタチにする
    - もっとも伝えたいことをシンプルに考え、伝わるようなストーリーを考える
    - 思いついたらすぐLTに応募する

- LTをするためのフロー
    - 考える／降ってくる／探してみる
    - 応募する
    - 文章にしてみる
    - 構成を推敲する
    - スライドをつくる
    - 予行演習する
    - 発表する
    - コミュニティに馴染む

フローに関しては、実際のところはLTの準備の順番違っても構いませんし、何か抜けていても問題ないと思います。実際、いきなりスライドを書き始めてもいいと思いますし、真似すべきではないと思いますが、[tokuhiromさんは話がおもしろいし普段いろいろ考えているようなのでスライドなしでもLTしてしまっています](http://www.youtube.com/watch?v=Hpu6EElzfuk)。**「何か人に伝えたいな」という気持ちを大切に**してLTを作り上げてみてください。

## 参考資料
- [達人ライトニングトーカーへの道 | ＠IT自分戦略研究所](http://jibun.atmarkit.co.jp/lcom01/index/index_lt.html)
- [What are Lightning Talks? | Shibuya Perl Mongers](http://shibuya.pm.org/blosxom/common/lightning_talks.html)
